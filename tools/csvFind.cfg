# The configuration file for csvFind.py
# Each section is a seperate search, as in python csvFind.py -c Section csvFile.csv
# findExpression(s) must be a Python expression that evaluate to True or False,
# and can use the Regular Expressions module functions re.match() and re.search()
# Each column in a FindExpression is represented using it's column name enclosed in ${ and } - ${columnName_1}
# Where there are multiple FindExpressions in a Section, then each FindExpression must have a unique FindExpression name
# (i.e. FindExpression1=, FindExpression2=)
# The final expression will be the 'OR' of all of the FindExpressions, unless the -A/--AND options is chosen,
# in which case the final expression will be the 'AND' of all of the FindExpressions.
# Complex expresions can be created by using the special FindExpression values of 'and', 'or', 'endOr' and 'endAnd'
# The FindExpression values of 'and' and 'or' will cause the following FindExpressions to be bracket together.
# This bracketed group will be joined onto the existing FinalExpression, using the current 'AND'/'OR' value,
# but subsequent FindExpressions (in this bracket) will be joined by the FindExpression value (i.e. 'AND' or 'OR').
# The FindExpression value of 'endOr' and 'endAnd' will terminate any previous bracketing and set the 'AND'/'OR'
# which will be used to join the bracketed group to any subsequent FindExpressions or bracketed groups.
# The source CSV file must have column headings
# For example an G-NAF file has headings
#LOCALITY_PID|DATE_CREATED|DATE_RETIRED|LOCALITY_NAME|PRIMARY_POSTCODE|LOCALITY_CLASS_CODE|STATE_PID|GNAF_LOCALITY_PID|GNAF_RELIABILITY_CODE
# And a ABS MBS file has heading
#MB_CODE_2016,MB_CATEGORY_NAME_2016,SA1_MAINCODE_2016,SA1_7DIGITCODE_2016,SA2_MAINCODE_2016,SA2_5DIGITCODE_2016,SA2_NAME_2016,SA3_CODE_2016,SA3_NAME_2016,SA4_CODE_2016,SA4_NAME_2016,GCCSA_CODE_2016,GCCSA_NAME_2016,STATE_CODE_2016,STATE_NAME_2016,AREA_ALBERS_SQKM
[find_G-NAF]
findExpression1=${LOCALITY_NAME}.find('ROW') >= 0
findExpression2=${PRIMARY_POSTCODE} == '3179'
[find_MBS]
findExpression0=and
findExpression1=${MB_CATEGORY_NAME_2016} == 'Parkland'
findExpression2=${SA2_NAME_2016}.find('Rowville') >= 0
findExpression3=endOr
[notRetired]
findExpression=${DATE_RETIRED} == ''
[WardSt]
findExpression=(${STREET_NAME} == 'WARD') and (${STREET_LOCALITY_PID}[0:3] == 'QLD') and (${STREET_TYPE_CODE} == 'STREET') and (${LOCALITY_PID} in ['QLD2844', 'QLD713', 'QLD1648', 'QLD2213', 'QLD2905'])
[WardStNum]
address_detail_pid|locality_pid|street_locality_pid|mb_2016_code|number_first|number_last|lot_number|alias_principal|longitude|latitude
findExpression=${street_locality_pid} == 'QLD148917'

