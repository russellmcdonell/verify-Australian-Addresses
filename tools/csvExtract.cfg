# This is the configuration file for csvExtract.py
# Each section is a seperate extraction, as in "$ python csvExtract.py -c Section csvFile.csv"
# Each section must define 'wantedColumns'
# Each section may define 'newColumns' being a tilda (~) separated list of title=value/expression pairs
# Where the value for a new column is an expression it must be a Python expression that evaluates to a string or number.
# Data from columns in the input file can be used in new column expressions by using the column name as a paramter.
# Parameter have the format ${columnName} and only column names from the CSV file can be used in parameters.
# 'wantedColumn' must be a comma seperated list of column headings from the source CSV file or newColumns
# The source CSV file must have column headings
# For example an G-NAF file has headings
#STATE_PID|DATE_CREATED|DATE_RETIRED|STATE_NAME|STATE_ABBREVIATION
# And a ABS Mesh Block file has heading
#MB_CODE_2016,MB_CATEGORY_NAME_2016,SA1_MAINCODE_2016,SA1_7DIGITCODE_2016,SA2_MAINCODE_2016,SA2_5DIGITCODE_2016,SA2_NAME_2016,SA3_CODE_2016,SA3_NAME_2016,SA4_CODE_2016,SA4_NAME_2016,GCCSA_CODE_2016,GCCSA_NAME_2016,STATE_CODE_2016,STATE_NAME_2016,AREA_ALBERS_SQKM
[wanted_G-NAF]
wantedColumns=STATE_NAME,STATE_ABBREVIATION
[wanted_MB]
wantedColumns=MB_CODE_2016,SA1_MAINCODE_2016
[wantedTest]
wantedColumns=STATE_PID,STATE_NAME,STATUS
newColumns=STATUS='A',STATE_NAME=${STATE_ABBREVIATION} + ':' + ${STATE_NAME}
[exampleLOCALITY1]
wantedColumns=LOCALITY_PID,LOCALITY_NAME,STATE_PID,ALIAS
newColumns=ALIAS='P'~LOCALITY_NAME=re.sub('-$', '', re.sub(r'-\s+', '-', re.sub(r'\s+-', '-', re.sub(r'\s\s+', ' ', ${LOCALITY_NAME}.replace(',', '').replace(':', '').replace("'", '')))))
[exampleLOCALITY2]
wantedColumns=LOCALITY_PID,NAME,STATE_PID,ALIAS
newColumns=ALIAS='A'~LOCALITY_NAME=re.sub('-$', '', re.sub(r'-\s+', '-', re.sub(r'\s+-', '-', re.sub(r'\s\s+', ' ', ${LOCALITY_NAME}.replace(',', '').replace(':', '').replace("'", '')))))
[STATE]
wantedColumns=STATE_PID,STATE_NAME,STATE_ABBREVIATION
[LOCALITY1]
wantedColumns=LOCALITY_PID,LOCALITY_NAME,PRIMARY_POSTCODE,STATE_PID,ALIAS
newColumns=ALIAS='P'
[LOCALITY2]
wantedColumns=LOCALITY_PID,NAME,POSTCODE,STATE_PID,ALIAS
newColumns=ALIAS='A'
[STREET_LOCALITY1]
wantedColumns=STREET_LOCALITY_PID,STREET_NAME,STREET_TYPE_CODE,STREET_SUFFIX_CODE,LOCALITY_PID
newColumns=ALIAS='P'
[STREET_LOCALITY2]
wantedColumns=STREET_LOCALITY_PID,STREET_NAME,STREET_TYPE_CODE,STREET_SUFFIX_CODE
newColumns=ALIAS='A'~LOCALITY_PID=''
[STREET_TYPE]
wantedColumns=CODE,NAME,DESCRIPTION
[STREET_SUFFIX]
wantedColumns=CODE,NAME,DESCRIPTION
[ADDRESS_MB]
wantedColumns=ADDRESS_DETAIL_PID,MB_2016_PID
[MB]
wantedColumns=MB_2016_PID,MB_2016_CODE
[ADDRESS_DETAILS]
wantedColumns=LOCALITY_PID,BUILDING_NAME,CONFIDENCE,POSTCODE,ADDRESS_DETAIL_PID,STREET_LOCALITY_PID,LOT_NUMBER,NUMBER_FIRST,NUMBER_LAST,ALIAS_PRINCIPAL,ADDRESS_SITE_PID
[ADDRESS_SITE_GEOCODE]
wantedColumns=ADDRESS_SITE_PID,LONGITUDE,LATITUDE
[ADDRESS_DEFAULT_GEOCODE]
wantedColumns=ADDRESS_DETAIL_PID,LONGITUDE,LATITUDE
[SA1]
wantedColumns=MB_CODE_2016,SA1_MAINCODE_2016
[LGA]
wantedColumns=MB_CODE_2016,LGA_CODE_2020
